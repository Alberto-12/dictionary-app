{"ast":null,"code":"var _jsxFileName = \"/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js\",\n  _s = $RefreshSig$();\nimport Arrow from \"../../assets/images/icon-arrow-down.svg\";\nimport \"./CustomSelectBox.css\";\nimport Logo from \"../../assets/images/logo.svg\";\nimport React, { useState } from 'react';\n\n/*const CustomSelectBox = ({ darkMode }) => {\n  const [selectedOption, setSelectedOption] = useState(\"San Serif\");\n  const options = [\"San Serif\", \"Serif\", \"Mono\"];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n  };\n\n  return (\n    <div id=\"header-container\" className={darkMode ? \"dark-mode\" : \"\"}>\n      <img src={Logo} alt=\"Logo\" />\n      <div className={`custom-select-box ${darkMode ? \"dark-mode\" : \"\"}`}>\n        <div className={`select-box ${isOptionsOpen ? \"open\" : \"\"}`}>\n          <div className=\"selected-option\" onClick={handleArrowClick}>\n            {selectedOption}\n            <img id=\"arrow\" src={Arrow} alt=\"Arrow down\" />\n          </div>\n          {isOptionsOpen && (\n            <div className=\"options\">\n              {options.map((option) => (\n                <div\n                  key={option}\n                  className={`option ${\n                    selectedOption === option ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => {\n                    handleOptionChange({ target: { value: option } });\n                    handleArrowClick();\n                  }}\n                >\n                  {option}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomSelectBox = _ref => {\n  _s();\n  let {\n    darkMode\n  } = _ref;\n  const [selectedItem, setSelectedItem] = useState(\"\");\n  function handleSelectChange(event) {\n    setSelectedItem(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header-container\",\n      className: darkMode ? \"dark-mode\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Logo,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-selected\",\n          children: selectedItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-items select-hide\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"same-as-selected\",\n            onClick: () => setSelectedItem(\"Sans Serif\"),\n            children: \"Sans Serif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setSelectedItem(\"Serif\"),\n            children: \"Serif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setSelectedItem(\"Mono\"),\n            children: \"Mono\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-hide\",\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Sans Serif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Serif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Mono\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Arrow,\n          alt: \"Arrow down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n};\n_s(CustomSelectBox, \"o9QfLvxMqLSKgX21fdeCNWvaNrs=\");\n_c = CustomSelectBox;\nexport default CustomSelectBox;\nvar _c;\n$RefreshReg$(_c, \"CustomSelectBox\");","map":{"version":3,"names":["Arrow","Logo","React","useState","jsxDEV","_jsxDEV","CustomSelectBox","_ref","_s","darkMode","selectedItem","setSelectedItem","handleSelectChange","event","target","value","children","id","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","_c","$RefreshReg$"],"sources":["/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js"],"sourcesContent":["import Arrow from \"../../assets/images/icon-arrow-down.svg\";\nimport \"./CustomSelectBox.css\";\nimport Logo from \"../../assets/images/logo.svg\";\nimport React, { useState } from 'react';\n\n/*const CustomSelectBox = ({ darkMode }) => {\n  const [selectedOption, setSelectedOption] = useState(\"San Serif\");\n  const options = [\"San Serif\", \"Serif\", \"Mono\"];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n  };\n\n  return (\n    <div id=\"header-container\" className={darkMode ? \"dark-mode\" : \"\"}>\n      <img src={Logo} alt=\"Logo\" />\n      <div className={`custom-select-box ${darkMode ? \"dark-mode\" : \"\"}`}>\n        <div className={`select-box ${isOptionsOpen ? \"open\" : \"\"}`}>\n          <div className=\"selected-option\" onClick={handleArrowClick}>\n            {selectedOption}\n            <img id=\"arrow\" src={Arrow} alt=\"Arrow down\" />\n          </div>\n          {isOptionsOpen && (\n            <div className=\"options\">\n              {options.map((option) => (\n                <div\n                  key={option}\n                  className={`option ${\n                    selectedOption === option ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => {\n                    handleOptionChange({ target: { value: option } });\n                    handleArrowClick();\n                  }}\n                >\n                  {option}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};*/\n\nconst CustomSelectBox = ({ darkMode }) => {\n    const [selectedItem, setSelectedItem] = useState(\"\");\n  \n    function handleSelectChange(event) {\n      setSelectedItem(event.target.value);\n    }\n  \n    return (\n      <div>\n        <div\n          id=\"header-container\"\n          className={darkMode ? \"dark-mode\" : \"\"}\n        >\n          <img src={Logo} alt=\"Logo\" />\n          <div className=\"custom-select\">\n            <div className=\"select-selected\">{selectedItem}</div>\n            <div className=\"select-items select-hide\">\n              <div\n                className=\"same-as-selected\"\n                onClick={() =>\n                  setSelectedItem(\"Sans Serif\")\n                }\n              >\n                Sans Serif\n              </div>\n              <div\n                onClick={() => setSelectedItem(\"Serif\")}\n              >\n                Serif\n              </div>\n              <div onClick={() => setSelectedItem(\"Mono\")}>\n                Mono\n              </div>\n            </div>\n            <select\n              className=\"select-hide\"\n              onChange={handleSelectChange}\n            >\n              <option value=\"1\">Sans Serif</option>\n              <option value=\"2\">Serif</option>\n              <option value=\"3\">Mono</option>\n            </select>\n            <img src={Arrow} alt=\"Arrow down\" />\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default CustomSelectBox;\n  \n  \n  \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}