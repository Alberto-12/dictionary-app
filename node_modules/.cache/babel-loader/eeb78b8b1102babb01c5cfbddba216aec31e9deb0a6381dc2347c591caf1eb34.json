{"ast":null,"code":"import _regeneratorRuntime from\"/Users/julieserafini/Desktop/dictionary-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/julieserafini/Desktop/dictionary-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/julieserafini/Desktop/dictionary-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import SearchIcon from\"../../assets/images/icon-search.svg\";import\"./Main.css\";import icon from\"../../assets/images/icon-play.svg\";import NewWindow from\"../../assets/images/icon-new-window.svg\";import iconHover from\"../../assets/images/icon-play-hover.svg\";/*\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No Definitions Found\");\n        setWordData(null);\n      });\n  };\n\n  const toggleErrorMessage = () => {\n    if (!wordData && error) {\n      return (\n        <div id=\"error-message\">\n          <div id=\"error-emoji\">ðŸ˜•</div>\n          <p id=\"first-error-message\">\n          {errorMessage}\n          </p>\n          <div id=\"second-error-message\">\n          Sorry pal, we couldn't find definitions for the word you were looking for. You can try the search again at a later time or head to the web instead.\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            name=\"search\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {toggleErrorMessage()}\n        {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetics[0].text}</p>\n              </div>\n\n              <img\n                id=\"play-icon\"\n                src={PlayIcon}\n                alt=\"Play Icon\"\n                onClick={() => {\n                  const audioObj = wordData[0].phonetics.find((p) => p.audio);\n                  if (audioObj) {\n                    const audio = new Audio(audioObj.audio);\n                    audio.play();\n                  }\n                }}\n              />\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            <div id=\"synonymos-div\">\n              <h3 id=\"synonymos\">Synonyms</h3>\n              {wordData[0].meanings[0].definitions[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].definitions[0].synonyms[0]}\n                </p>\n              ) : wordData[0].meanings[0].synonyms &&\n                wordData[0].meanings[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].synonyms[0]}\n                </p>\n              ) : null}\n            </div>\n\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[1].partOfSpeech}</p>\n              <hr />\n            </div>\n\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              <li>{wordData[0].meanings[1].definitions[0].definition}</li>\n              <li id=\"example\">\n                {wordData[0].meanings[1].definitions[0].example}\n              </li>\n            </ul>\n            <hr id=\"bottom-hr\" />\n            <div id=\"link-div\">\n              <a id=\"source\" href=\"/\">\n                Source\n              </a>\n              <div id=\"source-div\">\n                <a\n                  id=\"link\"\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  {wordData[0].sourceUrls[0]}\n                </a>\n                <a\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <img src={NewWindow} alt=\"New Window\" />\n                </a>\n              </div>\n\n              \n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;*/import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=function Main(_ref){var darkMode=_ref.darkMode,selectedFont=_ref.selectedFont;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),wordData=_useState2[0],setWordData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isHovered=_useState8[0],setIsHovered=_useState8[1];var handleSubmit=function handleSubmit(e){e.preventDefault();var searchWord=e.target.elements.search.value;fetch(\"https://api.dictionaryapi.dev/api/v2/entries/en/\".concat(searchWord)).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(res){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(res.ok){_context.next=2;break;}throw new Error();case 2:setError(false);setErrorMessage(\"\");return _context.abrupt(\"return\",res.json());case 5:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}()).then(function(data){setWordData(data);}).catch(function(){setError(true);setErrorMessage(\"No Definitions Found\");setWordData(null);});};var toggleErrorMessage=function toggleErrorMessage(){if(!wordData&&error){return/*#__PURE__*/_jsxs(\"div\",{id:\"error-message\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"error-emoji\",children:\"\\uD83D\\uDE15\"}),/*#__PURE__*/_jsx(\"p\",{id:\"first-error-message\",children:errorMessage}),/*#__PURE__*/_jsx(\"div\",{id:\"second-error-message\",children:\"Sorry pal, we couldn't find definitions for the word you were looking for. You can try the search again at a later time or head to the web instead.\"})]});}};return/*#__PURE__*/_jsx(\"div\",{id:\"main-container\",className:\"\".concat(darkMode?\"dark-mode\":\"\"),children:/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:selectedFont},children:[/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"search-input\",name:\"search\",style:{backgroundImage:\"url(\".concat(SearchIcon,\")\"),backgroundRepeat:\"no-repeat\",backgroundPosition:\" 95% 50%\",fontFamily:selectedFont// add fontFamily style\n}})}),toggleErrorMessage(),wordData&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"word-audio-div\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{id:\"word\",children:wordData[0].word}),/*#__PURE__*/_jsx(\"p\",{id:\"phonetic\",children:wordData[0].phonetics[0].text})]}),/*#__PURE__*/_jsx(\"div\",{id:\"play-icon\",style:{backgroundImage:\"url(\".concat(isHovered?iconHover:icon,\")\"),width:\"50px\",height:\"50px\",cursor:\"pointer\"},onMouseEnter:function onMouseEnter(){return setIsHovered(true);},onMouseLeave:function onMouseLeave(){return setIsHovered(false);},onClick:function onClick(){var audioObj=wordData[0].phonetics.find(function(p){return p.audio;});if(audioObj){var audio=new Audio(audioObj.audio);audio.play();}}})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"definition-div\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"definition\",children:wordData[0].meanings[0].partOfSpeech}),/*#__PURE__*/_jsx(\"hr\",{})]}),/*#__PURE__*/_jsx(\"p\",{id:\"meaning\",children:\"Meaning\"}),/*#__PURE__*/_jsx(\"ul\",{id:\"meanings\",children:wordData[0].meanings[0].definitions.map(function(definition,index){return/*#__PURE__*/_jsx(\"li\",{children:definition.definition},index);})}),/*#__PURE__*/_jsxs(\"div\",{id:\"synonymos-div\",children:[/*#__PURE__*/_jsx(\"h3\",{id:\"synonymos\",children:\"Synonyms\"}),wordData[0].meanings[0].definitions[0].synonyms.length>0?/*#__PURE__*/_jsx(\"p\",{id:\"synonymos-example\",children:wordData[0].meanings[0].definitions[0].synonyms[0]}):wordData[0].meanings[0].synonyms&&wordData[0].meanings[0].synonyms.length>0?/*#__PURE__*/_jsx(\"p\",{id:\"synonymos-example\",children:wordData[0].meanings[0].synonyms[0]}):null]}),/*#__PURE__*/_jsxs(\"div\",{id:\"definition-div\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"definition\",children:wordData[0].meanings[1].partOfSpeech}),/*#__PURE__*/_jsx(\"hr\",{})]}),/*#__PURE__*/_jsx(\"p\",{id:\"meaning\",children:\"Meaning\"}),/*#__PURE__*/_jsxs(\"ul\",{id:\"meanings\",children:[/*#__PURE__*/_jsx(\"li\",{children:wordData[0].meanings[1].definitions[0].definition}),/*#__PURE__*/_jsx(\"li\",{id:\"example\",children:wordData[0].meanings[1].definitions[0].example})]}),/*#__PURE__*/_jsx(\"hr\",{id:\"bottom-hr\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"link-div\",children:[/*#__PURE__*/_jsx(\"a\",{id:\"source\",href:\"/\",children:\"Source\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"source-div\",children:[/*#__PURE__*/_jsx(\"a\",{id:\"link\",href:wordData[0].sourceUrls[0],target:\"_blank\",rel:\"noreferrer noopener\",children:wordData[0].sourceUrls[0]}),/*#__PURE__*/_jsx(\"a\",{href:wordData[0].sourceUrls[0],target:\"_blank\",rel:\"noreferrer noopener\",children:/*#__PURE__*/_jsx(\"img\",{src:NewWindow,alt:\"New Window\"})})]})]})]})]})});};export default Main;","map":{"version":3,"names":["SearchIcon","icon","NewWindow","iconHover","useState","jsx","_jsx","jsxs","_jsxs","Main","_ref","darkMode","selectedFont","_useState","_useState2","_slicedToArray","wordData","setWordData","_useState3","_useState4","error","setError","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","isHovered","setIsHovered","handleSubmit","e","preventDefault","searchWord","target","elements","search","value","fetch","concat","then","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","ok","Error","abrupt","json","stop","_x","apply","arguments","data","catch","toggleErrorMessage","id","children","className","style","fontFamily","onSubmit","type","name","backgroundImage","backgroundRepeat","backgroundPosition","word","phonetics","text","width","height","cursor","onMouseEnter","onMouseLeave","onClick","audioObj","find","p","audio","Audio","play","meanings","partOfSpeech","definitions","map","definition","index","synonyms","length","example","href","sourceUrls","rel","src","alt"],"sources":["/Users/julieserafini/Desktop/dictionary-app/src/components/Main/Main.js"],"sourcesContent":["import SearchIcon from \"../../assets/images/icon-search.svg\";\nimport \"./Main.css\";\nimport icon from \"../../assets/images/icon-play.svg\";\nimport NewWindow from \"../../assets/images/icon-new-window.svg\";\nimport iconHover from \"../../assets/images/icon-play-hover.svg\";\n/*\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No Definitions Found\");\n        setWordData(null);\n      });\n  };\n\n  const toggleErrorMessage = () => {\n    if (!wordData && error) {\n      return (\n        <div id=\"error-message\">\n          <div id=\"error-emoji\">ðŸ˜•</div>\n          <p id=\"first-error-message\">\n          {errorMessage}\n          </p>\n          <div id=\"second-error-message\">\n          Sorry pal, we couldn't find definitions for the word you were looking for. You can try the search again at a later time or head to the web instead.\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            name=\"search\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {toggleErrorMessage()}\n        {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetics[0].text}</p>\n              </div>\n\n              <img\n                id=\"play-icon\"\n                src={PlayIcon}\n                alt=\"Play Icon\"\n                onClick={() => {\n                  const audioObj = wordData[0].phonetics.find((p) => p.audio);\n                  if (audioObj) {\n                    const audio = new Audio(audioObj.audio);\n                    audio.play();\n                  }\n                }}\n              />\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            <div id=\"synonymos-div\">\n              <h3 id=\"synonymos\">Synonyms</h3>\n              {wordData[0].meanings[0].definitions[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].definitions[0].synonyms[0]}\n                </p>\n              ) : wordData[0].meanings[0].synonyms &&\n                wordData[0].meanings[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].synonyms[0]}\n                </p>\n              ) : null}\n            </div>\n\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[1].partOfSpeech}</p>\n              <hr />\n            </div>\n\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              <li>{wordData[0].meanings[1].definitions[0].definition}</li>\n              <li id=\"example\">\n                {wordData[0].meanings[1].definitions[0].example}\n              </li>\n            </ul>\n            <hr id=\"bottom-hr\" />\n            <div id=\"link-div\">\n              <a id=\"source\" href=\"/\">\n                Source\n              </a>\n              <div id=\"source-div\">\n                <a\n                  id=\"link\"\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  {wordData[0].sourceUrls[0]}\n                </a>\n                <a\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <img src={NewWindow} alt=\"New Window\" />\n                </a>\n              </div>\n\n              \n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;*/\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No Definitions Found\");\n        setWordData(null);\n      });\n  };\n\n  const toggleErrorMessage = () => {\n    if (!wordData && error) {\n      return (\n        <div id=\"error-message\">\n          <div id=\"error-emoji\">ðŸ˜•</div>\n          <p id=\"first-error-message\">{errorMessage}</p>\n          <div id=\"second-error-message\">\n            Sorry pal, we couldn't find definitions for the word you were\n            looking for. You can try the search again at a later time or head to\n            the web instead.\n          </div>\n        </div>\n      );\n    } \n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            name=\"search\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {toggleErrorMessage()}\n        {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetics[0].text}</p>\n              </div>\n\n              <div\n                id=\"play-icon\"\n                style={{\n                  backgroundImage: `url(${isHovered ? iconHover : icon})`,\n                  width: \"50px\",\n                  height: \"50px\",\n                  cursor: \"pointer\",\n                }}\n                onMouseEnter={() => setIsHovered(true)}\n                onMouseLeave={() => setIsHovered(false)}\n                onClick={() => {\n                  const audioObj = wordData[0].phonetics.find((p) => p.audio);\n                  if (audioObj) {\n                    const audio = new Audio(audioObj.audio);\n                    audio.play();\n                  }\n                }}\n              ></div>\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            <div id=\"synonymos-div\">\n              <h3 id=\"synonymos\">Synonyms</h3>\n              {wordData[0].meanings[0].definitions[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].definitions[0].synonyms[0]}\n                </p>\n              ) : wordData[0].meanings[0].synonyms &&\n                wordData[0].meanings[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].synonyms[0]}\n                </p>\n              ) : null}\n            </div>\n\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[1].partOfSpeech}</p>\n              <hr />\n            </div>\n\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              <li>{wordData[0].meanings[1].definitions[0].definition}</li>\n              <li id=\"example\">\n                {wordData[0].meanings[1].definitions[0].example}\n              </li>\n            </ul>\n            <hr id=\"bottom-hr\" />\n            <div id=\"link-div\">\n              <a id=\"source\" href=\"/\">\n                Source\n              </a>\n              <div id=\"source-div\">\n                <a\n                  id=\"link\"\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  {wordData[0].sourceUrls[0]}\n                </a>\n                <a\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <img src={NewWindow} alt=\"New Window\" />\n                </a>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}