{"ast":null,"code":"var _jsxFileName = \"/Users/julieserafini/Desktop/dictionary-app/src/components/Main/Main.js\",\n  _s = $RefreshSig$();\nimport SearchIcon from \"../../assets/images/icon-search.svg\";\nimport \"./Main.css\";\nimport icon from \"../../assets/images/icon-play.svg\";\nimport NewWindow from \"../../assets/images/icon-new-window.svg\";\nimport iconHover from \"../../assets/images/icon-play-hover.svg\";\n/*\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No Definitions Found\");\n        setWordData(null);\n      });\n  };\n\n  const toggleErrorMessage = () => {\n    if (!wordData && error) {\n      return (\n        <div id=\"error-message\">\n          <div id=\"error-emoji\">ðŸ˜•</div>\n          <p id=\"first-error-message\">\n          {errorMessage}\n          </p>\n          <div id=\"second-error-message\">\n          Sorry pal, we couldn't find definitions for the word you were looking for. You can try the search again at a later time or head to the web instead.\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            name=\"search\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {toggleErrorMessage()}\n        {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetics[0].text}</p>\n              </div>\n\n              <img\n                id=\"play-icon\"\n                src={PlayIcon}\n                alt=\"Play Icon\"\n                onClick={() => {\n                  const audioObj = wordData[0].phonetics.find((p) => p.audio);\n                  if (audioObj) {\n                    const audio = new Audio(audioObj.audio);\n                    audio.play();\n                  }\n                }}\n              />\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            <div id=\"synonymos-div\">\n              <h3 id=\"synonymos\">Synonyms</h3>\n              {wordData[0].meanings[0].definitions[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].definitions[0].synonyms[0]}\n                </p>\n              ) : wordData[0].meanings[0].synonyms &&\n                wordData[0].meanings[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].synonyms[0]}\n                </p>\n              ) : null}\n            </div>\n\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[1].partOfSpeech}</p>\n              <hr />\n            </div>\n\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              <li>{wordData[0].meanings[1].definitions[0].definition}</li>\n              <li id=\"example\">\n                {wordData[0].meanings[1].definitions[0].example}\n              </li>\n            </ul>\n            <hr id=\"bottom-hr\" />\n            <div id=\"link-div\">\n              <a id=\"source\" href=\"/\">\n                Source\n              </a>\n              <div id=\"source-div\">\n                <a\n                  id=\"link\"\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  {wordData[0].sourceUrls[0]}\n                </a>\n                <a\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <img src={NewWindow} alt=\"New Window\" />\n                </a>\n              </div>\n\n              \n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;*/\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = _ref => {\n  _s();\n  let {\n    darkMode,\n    selectedFont\n  } = _ref;\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isHovered, setIsHovered] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`).then(async res => {\n      if (!res.ok) {\n        throw new Error();\n      }\n      setError(false);\n      setErrorMessage(\"\");\n      return res.json();\n    }).then(data => {\n      setWordData(data);\n    }).catch(() => {\n      setError(true);\n      setErrorMessage(\"No Definitions Found\");\n      setWordData(null);\n    });\n  };\n  const toggleErrorMessage = () => {\n    if (!wordData && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"error-emoji\",\n          children: \"\\uD83D\\uDE15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"first-error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"second-error-message\",\n          children: \"Sorry pal, we couldn't find definitions for the word you were looking for. You can try the search again at a later time or head to the web instead.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-container\",\n    className: `${darkMode ? \"dark-mode\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: selectedFont\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search-input\",\n          name: \"search\",\n          placeholder: \"Search for any word\\u2026\",\n          style: {\n            backgroundImage: `url(${SearchIcon})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \" 95% 50%\",\n            fontFamily: selectedFont // add fontFamily style\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), toggleErrorMessage(), wordData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"word-audio-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"word\",\n              children: wordData[0].word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"phonetic\",\n              children: wordData[0].phonetics[0].text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"play-icon\",\n            style: {\n              backgroundImage: `url(${isHovered ? iconHover : icon})`,\n              width: \"50px\",\n              height: \"50px\",\n              cursor: \"pointer\"\n            },\n            onMouseEnter: () => setIsHovered(true),\n            onMouseLeave: () => setIsHovered(false),\n            onClick: () => {\n              const audioObj = wordData[0].phonetics.find(p => p.audio);\n              if (audioObj) {\n                const audio = new Audio(audioObj.audio);\n                audio.play();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"definition-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"definition\",\n            children: wordData[0].meanings[0].partOfSpeech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"meaning\",\n          children: \"Meaning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"meanings\",\n          children: wordData[0].meanings[0].definitions.map((definition, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: definition.definition\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"synonymos-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"synonymos\",\n            children: \"Synonyms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), wordData[0].meanings[0].definitions[0].synonyms.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"synonymos-example\",\n            children: wordData[0].meanings[0].definitions[0].synonyms[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this) : wordData[0].meanings[0].synonyms && wordData[0].meanings[0].synonyms.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"synonymos-example\",\n            children: wordData[0].meanings[0].synonyms[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"definition-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"definition\",\n            children: wordData[0].meanings[1].partOfSpeech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"meaning\",\n          children: \"Meaning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"meanings\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: wordData[0].meanings[1].definitions[0].definition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            id: \"example\",\n            children: wordData[0].meanings[1].definitions[0].example\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          id: \"bottom-hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"link-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"source\",\n            href: \"/\",\n            children: \"Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"source-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              id: \"link\",\n              href: wordData[0].sourceUrls[0],\n              target: \"_blank\",\n              rel: \"noreferrer noopener\",\n              children: wordData[0].sourceUrls[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: wordData[0].sourceUrls[0],\n              target: \"_blank\",\n              rel: \"noreferrer noopener\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: NewWindow,\n                alt: \"New Window\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"K+j4YfsiZmYdyUvblsqpWLJs0Y0=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["SearchIcon","icon","NewWindow","iconHover","useState","jsxDEV","_jsxDEV","Main","_ref","_s","darkMode","selectedFont","wordData","setWordData","error","setError","errorMessage","setErrorMessage","isHovered","setIsHovered","handleSubmit","e","preventDefault","searchWord","target","elements","search","value","fetch","then","res","ok","Error","json","data","catch","toggleErrorMessage","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","fontFamily","onSubmit","type","name","placeholder","backgroundImage","backgroundRepeat","backgroundPosition","word","phonetics","text","width","height","cursor","onMouseEnter","onMouseLeave","onClick","audioObj","find","p","audio","Audio","play","meanings","partOfSpeech","definitions","map","definition","index","synonyms","length","example","href","sourceUrls","rel","src","alt","_c","$RefreshReg$"],"sources":["/Users/julieserafini/Desktop/dictionary-app/src/components/Main/Main.js"],"sourcesContent":["import SearchIcon from \"../../assets/images/icon-search.svg\";\nimport \"./Main.css\";\nimport icon from \"../../assets/images/icon-play.svg\";\nimport NewWindow from \"../../assets/images/icon-new-window.svg\";\nimport iconHover from \"../../assets/images/icon-play-hover.svg\";\n/*\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No Definitions Found\");\n        setWordData(null);\n      });\n  };\n\n  const toggleErrorMessage = () => {\n    if (!wordData && error) {\n      return (\n        <div id=\"error-message\">\n          <div id=\"error-emoji\">ðŸ˜•</div>\n          <p id=\"first-error-message\">\n          {errorMessage}\n          </p>\n          <div id=\"second-error-message\">\n          Sorry pal, we couldn't find definitions for the word you were looking for. You can try the search again at a later time or head to the web instead.\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            name=\"search\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {toggleErrorMessage()}\n        {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetics[0].text}</p>\n              </div>\n\n              <img\n                id=\"play-icon\"\n                src={PlayIcon}\n                alt=\"Play Icon\"\n                onClick={() => {\n                  const audioObj = wordData[0].phonetics.find((p) => p.audio);\n                  if (audioObj) {\n                    const audio = new Audio(audioObj.audio);\n                    audio.play();\n                  }\n                }}\n              />\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            <div id=\"synonymos-div\">\n              <h3 id=\"synonymos\">Synonyms</h3>\n              {wordData[0].meanings[0].definitions[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].definitions[0].synonyms[0]}\n                </p>\n              ) : wordData[0].meanings[0].synonyms &&\n                wordData[0].meanings[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].synonyms[0]}\n                </p>\n              ) : null}\n            </div>\n\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[1].partOfSpeech}</p>\n              <hr />\n            </div>\n\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              <li>{wordData[0].meanings[1].definitions[0].definition}</li>\n              <li id=\"example\">\n                {wordData[0].meanings[1].definitions[0].example}\n              </li>\n            </ul>\n            <hr id=\"bottom-hr\" />\n            <div id=\"link-div\">\n              <a id=\"source\" href=\"/\">\n                Source\n              </a>\n              <div id=\"source-div\">\n                <a\n                  id=\"link\"\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  {wordData[0].sourceUrls[0]}\n                </a>\n                <a\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <img src={NewWindow} alt=\"New Window\" />\n                </a>\n              </div>\n\n              \n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;*/\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No Definitions Found\");\n        setWordData(null);\n      });\n  };\n\n  const toggleErrorMessage = () => {\n    if (!wordData && error) {\n      return (\n        <div id=\"error-message\">\n          <div id=\"error-emoji\">ðŸ˜•</div>\n          <p id=\"first-error-message\">{errorMessage}</p>\n          <div id=\"second-error-message\">\n            Sorry pal, we couldn't find definitions for the word you were\n            looking for. You can try the search again at a later time or head to\n            the web instead.\n          </div>\n        </div>\n      );\n    } \n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            name=\"search\"\n            placeholder=\"Search for any wordâ€¦\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {toggleErrorMessage()}\n        {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetics[0].text}</p>\n              </div>\n\n              <div\n                id=\"play-icon\"\n                style={{\n                  backgroundImage: `url(${isHovered ? iconHover : icon})`,\n                  width: \"50px\",\n                  height: \"50px\",\n                  cursor: \"pointer\",\n                }}\n                onMouseEnter={() => setIsHovered(true)}\n                onMouseLeave={() => setIsHovered(false)}\n                onClick={() => {\n                  const audioObj = wordData[0].phonetics.find((p) => p.audio);\n                  if (audioObj) {\n                    const audio = new Audio(audioObj.audio);\n                    audio.play();\n                  }\n                }}\n              ></div>\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            <div id=\"synonymos-div\">\n              <h3 id=\"synonymos\">Synonyms</h3>\n              {wordData[0].meanings[0].definitions[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].definitions[0].synonyms[0]}\n                </p>\n              ) : wordData[0].meanings[0].synonyms &&\n                wordData[0].meanings[0].synonyms.length > 0 ? (\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].synonyms[0]}\n                </p>\n              ) : null}\n            </div>\n\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[1].partOfSpeech}</p>\n              <hr />\n            </div>\n\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              <li>{wordData[0].meanings[1].definitions[0].definition}</li>\n              <li id=\"example\">\n                {wordData[0].meanings[1].definitions[0].example}\n              </li>\n            </ul>\n            <hr id=\"bottom-hr\" />\n            <div id=\"link-div\">\n              <a id=\"source\" href=\"/\">\n                Source\n              </a>\n              <div id=\"source-div\">\n                <a\n                  id=\"link\"\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  {wordData[0].sourceUrls[0]}\n                </a>\n                <a\n                  href={wordData[0].sourceUrls[0]}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <img src={NewWindow} alt=\"New Window\" />\n                </a>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}