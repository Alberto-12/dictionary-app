{"ast":null,"code":"var _jsxFileName = \"/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Arrow from '../assets/images/icon-arrow-down.svg';\nimport './CustomSelectBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomSelectBox = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('San Serif');\n  const options = ['San Serif', 'Serif', 'Mono'];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-select-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `select-box ${isOptionsOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-option\",\n        onClick: handleArrowClick,\n        children: [selectedOption, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Arrow,\n          alt: \"Arrow down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `option ${selectedOption === option ? 'selected' : ''}`,\n          onClick: () => {\n            handleOptionChange({\n              target: {\n                value: option\n              }\n            });\n            handleArrowClick();\n          },\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomSelectBox, \"SiUy7aZNNFSxKjQoNR3v8nYpVMI=\");\n_c = CustomSelectBox;\nexport default CustomSelectBox;\nvar _c;\n$RefreshReg$(_c, \"CustomSelectBox\");","map":{"version":3,"names":["React","useState","Arrow","jsxDEV","_jsxDEV","CustomSelectBox","_s","selectedOption","setSelectedOption","options","isOptionsOpen","setIsOptionsOpen","handleOptionChange","event","target","value","handleArrowClick","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","option","_c","$RefreshReg$"],"sources":["/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Arrow from '../assets/images/icon-arrow-down.svg';\nimport './CustomSelectBox.css';\n\nconst CustomSelectBox = () => {\n  const [selectedOption, setSelectedOption] = useState('San Serif');\n  const options = ['San Serif', 'Serif', 'Mono'];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n  };\n\n  return (\n    <div className=\"custom-select-box\">\n      <div className={`select-box ${isOptionsOpen ? 'open' : ''}`}>\n        <div className=\"selected-option\" onClick={handleArrowClick}>\n          {selectedOption}\n          <img src={Arrow} alt=\"Arrow down\" />\n        </div>\n        <div className=\"options\">\n          {options.map((option) => (\n            <div\n              key={option}\n              className={`option ${selectedOption === option ? 'selected' : ''}`}\n              onClick={() => {\n                handleOptionChange({ target: { value: option } });\n                handleArrowClick();\n              }}\n            >\n              {option}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomSelectBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,sCAAsC;AACxD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,WAAW,CAAC;EACjE,MAAMQ,OAAO,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,MAAM,CAAC;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMW,kBAAkB,GAAIC,KAAK,IAAK;IACpCL,iBAAiB,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCd,OAAA;MAAKa,SAAS,EAAG,cAAaP,aAAa,GAAG,MAAM,GAAG,EAAG,EAAE;MAAAQ,QAAA,gBAC1Dd,OAAA;QAAKa,SAAS,EAAC,iBAAiB;QAACE,OAAO,EAAEH,gBAAiB;QAAAE,QAAA,GACxDX,cAAc,eACfH,OAAA;UAAKgB,GAAG,EAAElB,KAAM;UAACmB,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChC,eACNrB,OAAA;QAAKa,SAAS,EAAC,SAAS;QAAAC,QAAA,EACrBT,OAAO,CAACiB,GAAG,CAAEC,MAAM,iBAClBvB,OAAA;UAEEa,SAAS,EAAG,UAASV,cAAc,KAAKoB,MAAM,GAAG,UAAU,GAAG,EAAG,EAAE;UACnER,OAAO,EAAEA,CAAA,KAAM;YACbP,kBAAkB,CAAC;cAAEE,MAAM,EAAE;gBAAEC,KAAK,EAAEY;cAAO;YAAE,CAAC,CAAC;YACjDX,gBAAgB,EAAE;UACpB,CAAE;UAAAE,QAAA,EAEDS;QAAM,GAPFA,MAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QASd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACnB,EAAA,CArCID,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAuCrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}