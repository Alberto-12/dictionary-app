{"ast":null,"code":"var _jsxFileName = \"/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js\",\n  _s = $RefreshSig$();\nimport Arrow from \"../../assets/images/icon-arrow-down.svg\";\nimport \"./CustomSelectBox.css\";\nimport Logo from \"../../assets/images/logo.svg\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomSelectBox = _ref => {\n  _s();\n  let {\n    darkMode\n  } = _ref;\n  const [selectedOption, setSelectedOption] = useState(\"San Serif\");\n  const [selectedFontFamily, setSelectedFontFamily] = useState(\"Inter\");\n  const options = [\"San Serif\", \"Serif\", \"Mono\"];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n  const ref = useRef(null);\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n    setSelectedFontFamily(selectedOption === \"San Serif\" ? \"Inter\" : selectedOption === \"Serif\" ? \"Lora\" : \"Inconsolata\");\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setIsOptionsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"header-container\",\n    className: darkMode ? \"dark-mode\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Logo,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `custom-select-box ${darkMode ? \"dark-mode\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select-box ${isOptionsOpen ? \"open\" : \"\"}`,\n        ref: ref,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `selected-option ${selectedOption === \"San Serif\" ? \"inter-font\" : selectedOption === \"Serif\" ? \"lora-font\" : selectedOption === \"Mono\" ? \"inconsolata-font\" : \"\"}`,\n          onClick: handleArrowClick,\n          children: [selectedOption, /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"arrow\",\n            src: Arrow,\n            alt: \"Arrow down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), isOptionsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option ${selectedOption === option ? \"selected\" : \"\"}`,\n            \"data-font\": option === \"San Serif\" ? \"Inter\" : option === \"Serif\" ? \"Lora\" : option === \"Mono\" ? \"Inconsolata\" : null,\n            onClick: () => {\n              setSelectedOption(option);\n              setIsOptionsOpen(false);\n              setSelectedFontFamily(option === \"San Serif\" ? \"Inter\" : option === \"Serif\" ? \"Lora\" : \"Inconsolata\");\n            },\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomSelectBox, \"etoJ3dWOaksW5DpSlBNUNS+ncMw=\");\n_c = CustomSelectBox;\nexport default CustomSelectBox;\nvar _c;\n$RefreshReg$(_c, \"CustomSelectBox\");","map":{"version":3,"names":["Arrow","Logo","React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CustomSelectBox","_ref","_s","darkMode","selectedOption","setSelectedOption","selectedFontFamily","setSelectedFontFamily","options","isOptionsOpen","setIsOptionsOpen","ref","handleArrowClick","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","id","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","option","_c","$RefreshReg$"],"sources":["/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js"],"sourcesContent":["import Arrow from \"../../assets/images/icon-arrow-down.svg\";\nimport \"./CustomSelectBox.css\";\nimport Logo from \"../../assets/images/logo.svg\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst CustomSelectBox = ({ darkMode }) => {\n  const [selectedOption, setSelectedOption] = useState(\"San Serif\");\n  const [selectedFontFamily, setSelectedFontFamily] = useState(\"Inter\");\n  const options = [ \"San Serif\",  \"Serif\", \"Mono\"];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n  const ref = useRef(null);\n\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n    setSelectedFontFamily(selectedOption === \"San Serif\" ? \"Inter\" : selectedOption === \"Serif\" ? \"Lora\" : \"Inconsolata\");\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setIsOptionsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n\n  return (\n    <div id=\"header-container\" \n    className={darkMode ? \"dark-mode\" : \"\"}\n    >\n      <img src={Logo} alt=\"Logo\" />\n      <div className={`custom-select-box ${darkMode ? \"dark-mode\" : \"\"}`}>\n        <div className={`select-box ${isOptionsOpen ? \"open\" : \"\"}`} ref={ref}>\n        <div className={`selected-option ${selectedOption === \"San Serif\" ? \"inter-font\" : selectedOption === \"Serif\" ? \"lora-font\" : selectedOption === \"Mono\" ? \"inconsolata-font\" : \"\"}`} onClick={handleArrowClick}>\n            {selectedOption}\n            <img id=\"arrow\" src={Arrow} alt=\"Arrow down\" />\n          </div>\n          {isOptionsOpen && (\n            <div className=\"options\">\n              {options.map((option) => (\n                <div\n                  key={option}\n                  className={`option ${\n                    selectedOption === option ? \"selected\" : \"\"\n                  }`}\n                  data-font={option === \"San Serif\" ? \"Inter\" : option === \"Serif\" ? \"Lora\" : option === \"Mono\" ? \"Inconsolata\" : null}\n                  onClick={() => {\n                    setSelectedOption(option);\n                    setIsOptionsOpen(false);\n                    setSelectedFontFamily(option === \"San Serif\" ? \"Inter\" : option === \"Serif\" ? \"Lora\" : \"Inconsolata\");\n                  }}\n                >\n                  {option}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomSelectBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}