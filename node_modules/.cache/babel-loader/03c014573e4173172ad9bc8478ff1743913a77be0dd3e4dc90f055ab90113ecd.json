{"ast":null,"code":"var _jsxFileName = \"/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Arrow from \"../../assets/images/icon-arrow-down.svg\";\nimport \"./CustomSelectBox.css\";\nimport Logo from \"../../assets/images/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomSelectBox = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"San Serif\");\n  const options = [\"San Serif\", \"Serif\", \"Mono\"];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"header-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Logo,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-select-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select-box ${isOptionsOpen ? \"open\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-option\",\n          onClick: handleArrowClick,\n          children: [selectedOption, /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"arrow\",\n            src: Arrow,\n            alt: \"Arrow down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), isOptionsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option ${selectedOption === option ? \"selected\" : \"\"}`,\n            onClick: () => {\n              handleOptionChange({\n                target: {\n                  value: option\n                }\n              });\n              handleArrowClick();\n            },\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomSelectBox, \"UotHBdzw3YePeaNecZwXyLVSiIc=\");\n_c = CustomSelectBox;\nexport default CustomSelectBox;\nvar _c;\n$RefreshReg$(_c, \"CustomSelectBox\");","map":{"version":3,"names":["React","useState","Arrow","Logo","jsxDEV","_jsxDEV","CustomSelectBox","_s","selectedOption","setSelectedOption","options","isOptionsOpen","setIsOptionsOpen","handleOptionChange","event","target","value","handleArrowClick","id","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","option","_c","$RefreshReg$"],"sources":["/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Arrow from \"../../assets/images/icon-arrow-down.svg\";\nimport \"./CustomSelectBox.css\";\nimport Logo from \"../../assets/images/logo.svg\";\n\nconst CustomSelectBox = () => {\n  const [selectedOption, setSelectedOption] = useState(\"San Serif\");\n  const options = [\"San Serif\", \"Serif\", \"Mono\"];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n  };\n\n  return (\n    <div id=\"header-container\">\n      <img src={Logo} alt=\"Logo\" />\n      <div className=\"custom-select-box\">\n        <div className={`select-box ${isOptionsOpen ? \"open\" : \"\"}`}>\n          <div className=\"selected-option\" onClick={handleArrowClick}>\n            {selectedOption}\n            <img id=\"arrow\" src={Arrow} alt=\"Arrow down\" />\n          </div>\n          {isOptionsOpen && (\n            <div className=\"options\">\n              {options.map((option) => (\n                <div\n                  key={option}\n                  className={`option ${\n                    selectedOption === option ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => {\n                    handleOptionChange({ target: { value: option } });\n                    handleArrowClick();\n                  }}\n                >\n                  {option}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomSelectBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,yCAAyC;AAC3D,OAAO,uBAAuB;AAC9B,OAAOC,IAAI,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EACjE,MAAMS,OAAO,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,MAAM,CAAC;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMY,kBAAkB,GAAIC,KAAK,IAAK;IACpCL,iBAAiB,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,oBACEN,OAAA;IAAKa,EAAE,EAAC,kBAAkB;IAAAC,QAAA,gBACxBd,OAAA;MAAKe,GAAG,EAAEjB,IAAK;MAACkB,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC7BpB,OAAA;MAAKqB,SAAS,EAAC,mBAAmB;MAAAP,QAAA,eAChCd,OAAA;QAAKqB,SAAS,EAAG,cAAaf,aAAa,GAAG,MAAM,GAAG,EAAG,EAAE;QAAAQ,QAAA,gBAC1Dd,OAAA;UAAKqB,SAAS,EAAC,iBAAiB;UAACC,OAAO,EAAEV,gBAAiB;UAAAE,QAAA,GACxDX,cAAc,eACfH,OAAA;YAAKa,EAAE,EAAC,OAAO;YAACE,GAAG,EAAElB,KAAM;YAACmB,GAAG,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3C,EACLd,aAAa,iBACZN,OAAA;UAAKqB,SAAS,EAAC,SAAS;UAAAP,QAAA,EACrBT,OAAO,CAACkB,GAAG,CAAEC,MAAM,iBAClBxB,OAAA;YAEEqB,SAAS,EAAG,UACVlB,cAAc,KAAKqB,MAAM,GAAG,UAAU,GAAG,EAC1C,EAAE;YACHF,OAAO,EAAEA,CAAA,KAAM;cACbd,kBAAkB,CAAC;gBAAEE,MAAM,EAAE;kBAAEC,KAAK,EAAEa;gBAAO;cAAE,CAAC,CAAC;cACjDZ,gBAAgB,EAAE;YACpB,CAAE;YAAAE,QAAA,EAEDU;UAAM,GATFA,MAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAWd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAClB,EAAA,CA5CID,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AA8CrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}