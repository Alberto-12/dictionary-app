{"ast":null,"code":"import _slicedToArray from\"/Users/julieserafini/Desktop/dictionary-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Arrow from\"../../assets/images/icon-arrow-down.svg\";import\"./CustomSelectBox.css\";import Logo from\"../../assets/images/logo.svg\";import React,{useState,useEffect,useRef}from\"react\";/*const CustomSelectBox = ({ darkMode }) => {\n    const [selectedOption, setSelectedOption] = useState({\n      label: \"San Serif\",\n      value: \"Inter\"\n    });\n    const [fontFamily, setFontFamily] = useState(\"Inter\");\n    const options = [\n      { label: \"San Serif\", value: \"Inter\", dataFont: \"Inter\" },\n      { label: \"Serif\", value: \"Lora\", dataFont: \"Lora\" },\n      { label: \"Mono\", value: \"Inconsolata\", dataFont: \"Inconsolata\" },\n    ];\n    const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n    const ref = useRef(null);\n  \n    const handleArrowClick = () => {\n      setIsOptionsOpen(!isOptionsOpen);\n    };\n  \n    const handleOptionClick = (option) => {\n      setSelectedOption(option);\n      setIsOptionsOpen(false);\n      const selectedOption = options.find((o) => o.label === option.label);\n      if (selectedOption) {\n        setFontFamily(selectedOption.dataFont);\n      }\n    };\n    \n  \n    useEffect(() => {\n      console.log(\"fontFamily:\", fontFamily);\n      if (ref.current) {\n        const selectedElement = ref.current.querySelector(`[data-font=\"${fontFamily}\"]`);\n        console.log(\"selectedElement:\", selectedElement);\n        if (selectedElement) {\n          selectedElement.classList.add(\"selected\");\n        }\n      }\n    }, [ref, fontFamily]);\n    \n    \n    \n  \n    useEffect(() => {\n      const handleClickOutside = (event) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setIsOptionsOpen(false);\n        }\n      };\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  \n    return (\n      <div\n        id=\"header-container\"\n        className={darkMode ? \"dark-mode\" : \"\"}\n      >\n        <img src={Logo} alt=\"Logo\" />\n        <div className={`custom-select-box ${darkMode ? \"dark-mode\" : \"\"}`}>\n          <div className={`select-box ${isOptionsOpen ? \"open\" : \"\"}`} ref={ref}>\n            <div\n              className={`selected-option ${selectedOption.value.toLowerCase()}-font`}\n              onClick={handleArrowClick}\n            >\n              {selectedOption.label}\n              <img id=\"arrow\" src={Arrow} alt=\"Arrow down\" />\n            </div>\n            {isOptionsOpen && (\n              <div className=\"options\" style={{ fontFamily: fontFamily }}>\n                {options.map((option) => (\n                  <div\n                    key={option.value}\n                    className={`option ${\n                      selectedOption.value === option.value ? \"selected\" : \"\"\n                    }`}\n                    data-font={option.dataFont}\n                    onClick={() => handleOptionClick(option)}\n                  >\n                    {option.label}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default CustomSelectBox;*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomSelectBox=function CustomSelectBox(_ref){var darkMode=_ref.darkMode,selectedFont=_ref.selectedFont,onFontSelect=_ref.onFontSelect;var _useState=useState({label:\"San Serif\",value:\"Inter\"}),_useState2=_slicedToArray(_useState,2),selectedOption=_useState2[0],setSelectedOption=_useState2[1];var _useState3=useState(\"Inter\"),_useState4=_slicedToArray(_useState3,2),fontFamily=_useState4[0],setFontFamily=_useState4[1];var options=[{label:\"San Serif\",value:\"Inter\",dataFont:\"Inter\"},{label:\"Serif\",value:\"Lora\",dataFont:\"Lora\"},{label:\"Mono\",value:\"Inconsolata\",dataFont:\"Inconsolata\"}];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isOptionsOpen=_useState6[0],setIsOptionsOpen=_useState6[1];var ref=useRef(null);var handleArrowClick=function handleArrowClick(){setIsOptionsOpen(!isOptionsOpen);};var handleOptionClick=function handleOptionClick(option){setSelectedOption(option);setIsOptionsOpen(false);var selectedOption=options.find(function(o){return o.label===option.label;});if(selectedOption){var _selectedFont=selectedOption.dataFont;setFontFamily(_selectedFont);onFontSelect(_selectedFont);}};useEffect(function(){console.log(\"fontFamily:\",fontFamily);if(ref.current){var selectedElement=ref.current.querySelector(\"[data-font=\\\"\".concat(fontFamily,\"\\\"]\"));console.log(\"selectedElement:\",selectedElement);if(selectedElement){selectedElement.classList.add(\"selected\");}}},[ref,fontFamily]);useEffect(function(){var handleClickOutside=function handleClickOutside(event){if(ref.current&&!ref.current.contains(event.target)){setIsOptionsOpen(false);}};document.addEventListener(\"mousedown\",handleClickOutside);return function(){document.removeEventListener(\"mousedown\",handleClickOutside);};},[ref]);return/*#__PURE__*/_jsxs(\"div\",{id:\"header-container\",className:darkMode?\"dark-mode\":\"\",children:[/*#__PURE__*/_jsx(\"img\",{src:Logo,alt:\"Logo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"custom-select-box \".concat(darkMode?\"dark-mode\":\"\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"select-box \".concat(isOptionsOpen?\"open\":\"\"),ref:ref,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selected-option \".concat(selectedOption.value.toLowerCase(),\"-font\"),onClick:handleArrowClick,children:[selectedOption.label,/*#__PURE__*/_jsx(\"img\",{id:\"arrow\",src:Arrow,alt:\"Arrow down\"})]}),isOptionsOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"options\",style:{fontFamily:fontFamily},children:options.map(function(option){return/*#__PURE__*/_jsx(\"div\",{className:\"option \".concat(selectedOption.value===option.value?\"selected\":\"\"),\"data-font\":option.dataFont,onClick:function onClick(){return handleOptionClick(option);},children:option.label},option.value);})})]})})]});};export default CustomSelectBox;","map":{"version":3,"names":["Arrow","Logo","React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","CustomSelectBox","_ref","darkMode","selectedFont","onFontSelect","_useState","label","value","_useState2","_slicedToArray","selectedOption","setSelectedOption","_useState3","_useState4","fontFamily","setFontFamily","options","dataFont","_useState5","_useState6","isOptionsOpen","setIsOptionsOpen","ref","handleArrowClick","handleOptionClick","option","find","o","console","log","current","selectedElement","querySelector","concat","classList","add","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","id","className","children","src","alt","toLowerCase","onClick","style","map"],"sources":["/Users/julieserafini/Desktop/dictionary-app/src/components/CustomSelectBox/CustomSelectBox.js"],"sourcesContent":["import Arrow from \"../../assets/images/icon-arrow-down.svg\";\nimport \"./CustomSelectBox.css\";\nimport Logo from \"../../assets/images/logo.svg\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\n/*const CustomSelectBox = ({ darkMode }) => {\n    const [selectedOption, setSelectedOption] = useState({\n      label: \"San Serif\",\n      value: \"Inter\"\n    });\n    const [fontFamily, setFontFamily] = useState(\"Inter\");\n    const options = [\n      { label: \"San Serif\", value: \"Inter\", dataFont: \"Inter\" },\n      { label: \"Serif\", value: \"Lora\", dataFont: \"Lora\" },\n      { label: \"Mono\", value: \"Inconsolata\", dataFont: \"Inconsolata\" },\n    ];\n    const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n    const ref = useRef(null);\n  \n    const handleArrowClick = () => {\n      setIsOptionsOpen(!isOptionsOpen);\n    };\n  \n    const handleOptionClick = (option) => {\n      setSelectedOption(option);\n      setIsOptionsOpen(false);\n      const selectedOption = options.find((o) => o.label === option.label);\n      if (selectedOption) {\n        setFontFamily(selectedOption.dataFont);\n      }\n    };\n    \n  \n    useEffect(() => {\n      console.log(\"fontFamily:\", fontFamily);\n      if (ref.current) {\n        const selectedElement = ref.current.querySelector(`[data-font=\"${fontFamily}\"]`);\n        console.log(\"selectedElement:\", selectedElement);\n        if (selectedElement) {\n          selectedElement.classList.add(\"selected\");\n        }\n      }\n    }, [ref, fontFamily]);\n    \n    \n    \n  \n    useEffect(() => {\n      const handleClickOutside = (event) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setIsOptionsOpen(false);\n        }\n      };\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  \n    return (\n      <div\n        id=\"header-container\"\n        className={darkMode ? \"dark-mode\" : \"\"}\n      >\n        <img src={Logo} alt=\"Logo\" />\n        <div className={`custom-select-box ${darkMode ? \"dark-mode\" : \"\"}`}>\n          <div className={`select-box ${isOptionsOpen ? \"open\" : \"\"}`} ref={ref}>\n            <div\n              className={`selected-option ${selectedOption.value.toLowerCase()}-font`}\n              onClick={handleArrowClick}\n            >\n              {selectedOption.label}\n              <img id=\"arrow\" src={Arrow} alt=\"Arrow down\" />\n            </div>\n            {isOptionsOpen && (\n              <div className=\"options\" style={{ fontFamily: fontFamily }}>\n                {options.map((option) => (\n                  <div\n                    key={option.value}\n                    className={`option ${\n                      selectedOption.value === option.value ? \"selected\" : \"\"\n                    }`}\n                    data-font={option.dataFont}\n                    onClick={() => handleOptionClick(option)}\n                  >\n                    {option.label}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default CustomSelectBox;*/\n\nconst CustomSelectBox = ({ darkMode, selectedFont, onFontSelect }) => {\n  const [selectedOption, setSelectedOption] = useState({\n    label: \"San Serif\",\n    value: \"Inter\",\n  });\n  const [fontFamily, setFontFamily] = useState(\"Inter\");\n  const options = [\n    { label: \"San Serif\", value: \"Inter\", dataFont: \"Inter\" },\n    { label: \"Serif\", value: \"Lora\", dataFont: \"Lora\" },\n    { label: \"Mono\", value: \"Inconsolata\", dataFont: \"Inconsolata\" },\n  ];\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n  const ref = useRef(null);\n\n  const handleArrowClick = () => {\n    setIsOptionsOpen(!isOptionsOpen);\n  };\n\n  const handleOptionClick = (option) => {\n    setSelectedOption(option);\n    setIsOptionsOpen(false);\n    const selectedOption = options.find((o) => o.label === option.label);\n    if (selectedOption) {\n      const selectedFont = selectedOption.dataFont;\n      setFontFamily(selectedFont);\n      onFontSelect(selectedFont);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"fontFamily:\", fontFamily);\n    if (ref.current) {\n      const selectedElement = ref.current.querySelector(\n        `[data-font=\"${fontFamily}\"]`\n      );\n      console.log(\"selectedElement:\", selectedElement);\n      if (selectedElement) {\n        selectedElement.classList.add(\"selected\");\n      }\n    }\n  }, [ref, fontFamily]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setIsOptionsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n\n  return (\n    <div id=\"header-container\" className={darkMode ? \"dark-mode\" : \"\"}>\n      <img src={Logo} alt=\"Logo\" />\n      <div className={`custom-select-box ${darkMode ? \"dark-mode\" : \"\"}`}>\n        <div className={`select-box ${isOptionsOpen ? \"open\" : \"\"}`} ref={ref}>\n          <div\n            className={`selected-option ${selectedOption.value.toLowerCase()}-font`}\n            onClick={handleArrowClick}\n          >\n            {selectedOption.label}\n            <img id=\"arrow\" src={Arrow} alt=\"Arrow down\" />\n          </div>\n          {isOptionsOpen && (\n            <div className=\"options\" style={{ fontFamily: fontFamily }}>\n              {options.map((option) => (\n                <div\n                  key={option.value}\n                  className={`option ${\n                    selectedOption.value === option.value ? \"selected\" : \"\"\n                  }`}\n                  data-font={option.dataFont}\n                  onClick={() => handleOptionClick(option)}\n                >\n                  {option.label}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomSelectBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}