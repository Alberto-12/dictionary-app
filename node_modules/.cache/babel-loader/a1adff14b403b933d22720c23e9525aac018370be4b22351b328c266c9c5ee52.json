{"ast":null,"code":"var _jsxFileName = \"/Users/julieserafini/Desktop/dictionary-app/src/components/Main/Main.js\",\n  _s = $RefreshSig$();\nimport SearchIcon from \"../../assets/images/icon-search.svg\";\nimport \"./Main.css\";\nimport PlayIcon from \"../../assets/images/icon-play.svg\";\nimport NewWindow from \"../../assets/images/icon-new-window.svg\";\n\n/*const Main = ({ darkMode }) => {\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <form>\n        <input\n          type=\"text\"\n          id=\"search-input\"\n          style={{\n            backgroundImage: `url(${SearchIcon})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \" 95% 50%\",\n          }}\n        />\n      </form>\n      <div id=\"word-audio-div\">\n        <div>\n          <h1 id=\"word\">Keyboard</h1>\n          <p id=\"phonetic\">/'ki:bc:d/</p>\n        </div>\n        <img id=\"play-icon\" src={PlayIcon} alt=\"Play Icon\" />\n      </div>\n      <div id=\"definition-div\">\n        <p id=\"definition\">noun</p>\n        <hr/>\n      </div>\n      <p id=\"meaning\">Meaning</p>\n      <ul id=\"meanings\">\n          <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n          <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n          <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n      </ul>\n      <div id=\"synonymos-div\">\n      <h3 id=\"synonymos\">Synonyms</h3>\n      <p id=\"synonymos-example\">electronic keyboard</p>\n      </div>\n      <div id=\"definition-div\">\n        <p id=\"definition\">verb</p>\n        <hr />\n      </div>\n      <p id=\"meaning\">Meaning</p>\n      <ul id=\"meanings\">\n          <li>To type on a computer keyboard.</li>\n          <li id=\"example\">“Keyboarding is the part of this job I hate the most.”</li>\n      </ul>\n      <hr id=\"bottom-hr\"/>\n      <div id=\"link-div\">\n      <a id=\"source\" href=\"/\">Source</a>\n      <div id=\"source-div\">\n      <a id=\"link\" href=\"/\">https://en.wiktionary.org/wiki/keyboard</a>\n      <img src={NewWindow} alt=\"New Window\"/>\n      </div>\n      </div>\n      \n\n\n\n    </div>\n  );\n};\n\nexport default Main;\n\nconst Main = ({ darkMode, selectedFont }) => {\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        <div\n          id=\"word-audio-div\"\n          style={{ fontFamily: selectedFont }} // add fontFamily\n        >\n          <div>\n        <h1 id=\"word\">Keyboard</h1>\n            <p id=\"phonetic\">/ˈkiːbɔːd/</p>\n          </div>\n          <img id=\"play-icon\" src={PlayIcon} alt=\"Play Icon\" />\n        </div>\n        <div id=\"definition-div\">\n          <p id=\"definition\">noun</p>\n          <hr />\n        </div>\n        <p id=\"meaning\">Meaning</p>\n        <ul id=\"meanings\">\n          <li>\n            (etc.) A set of keys used to operate a typewriter, computer etc.\n          </li>\n          <li>\n            A component of many instruments including the piano, organ, and\n            harpsichord consisting of usually black and white keys that cause\n            different tones to be produced when struck.\n          </li>\n          <li>\n            A device with keys of a musical keyboard, used to control electronic\n            sound-producing devices which may be built into or separate from the\n            keyboard device.\n          </li>\n        </ul>\n        <div id=\"synonymos-div\">\n          <h3 id=\"synonymos\">Synonyms</h3>\n          <p id=\"synonymos-example\">electronic keyboard</p>\n        </div>\n        <div id=\"definition-div\">\n          <p id=\"definition\">verb</p>\n          <hr />\n        </div>\n        <p id=\"meaning\">Meaning</p>\n        <ul id=\"meanings\">\n          <li>To type on a computer keyboard.</li>\n          <li id=\"example\">\n            “Keyboarding is the part of this job I hate the most.”\n          </li>\n        </ul>\n        <hr id=\"bottom-hr\" />\n        <div id=\"link-div\">\n          <a id=\"source\" href=\"/\">\n            Source\n          </a>\n          <div id=\"source-div\">\n            <a id=\"link\" href=\"/\">\n              https://en.wiktionary.org/wiki/keyboard\n            </a>\n            <img src={NewWindow} alt=\"New Window\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No result\");\n      });\n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            name=\"search\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetics[0].text}</p>\n              </div>\n              <img\n                id=\"play-icon\"\n                src={PlayIcon}\n                alt=\"Play Icon\"\n                onClick={() => {\n                  const audioUrl = wordData[0].phonetics[0].audio;\n                  if (audioUrl) {\n                    const audio = new Audio(audioUrl);\n                    audio.play();\n                  }\n                }}\n              />\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            <div id=\"synonymos-div\">\n              <h3 id=\"synonymos\">Synonyms</h3>\n              <p id=\"synonymos-example\">\n                {wordData[0].meanings[0].definitions[0].synonyms[0]}\n              </p>\n            </div>\n          </div>\n        )}\n        <div id=\"definition-div\">\n          <p id=\"definition\">verb</p>\n          <hr />\n        </div>\n        <p id=\"meaning\">Meaning</p>\n        <ul id=\"meanings\">\n          <li>To type on a computer keyboard.</li>\n          <li id=\"example\">\n            “Keyboarding is the part of this job I hate the most.”\n          </li>\n        </ul>\n        {error && <p>{errorMessage}</p>}\n        <hr id=\"bottom-hr\" />\n        <div id=\"link-div\">\n          <a id=\"source\" href=\"/\">\n            Source\n          </a>\n          <div id=\"source-div\">\n            <a id=\"link\" href=\"/\">\n              https://en.wiktionary.org/wiki/keyboard\n            </a>\n            <img src={NewWindow} alt=\"New Window\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;*/\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = _ref => {\n  _s();\n  let {\n    darkMode,\n    selectedFont\n  } = _ref;\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`).then(async res => {\n      if (!res.ok) {\n        throw new Error();\n      }\n      setError(false);\n      setErrorMessage(\"\");\n      return res.json();\n    }).then(data => {\n      setWordData(data);\n    }).catch(() => {\n      setError(true);\n      setErrorMessage(\"No Definitions Found\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-container\",\n    className: `${darkMode ? \"dark-mode\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: selectedFont\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search-input\",\n          placeholder: \"Search for any word...\",\n          name: \"search\",\n          style: {\n            backgroundImage: `url(${SearchIcon})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \" 95% 50%\",\n            fontFamily: selectedFont // add fontFamily style\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"error-message-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD83D\\uDE15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sorry pal, we couldn't find definitions for the word you were looking for. You can try the search again at later time or head to the web instead.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }, this), wordData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"word-audio-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"word\",\n              children: wordData[0].word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"phonetic\",\n              children: wordData[0].phonetic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"play-icon\",\n            src: PlayIcon,\n            alt: \"Play Icon\",\n            onClick: () => {\n              const audioUrl = wordData[0].phonetics[0].audio;\n              if (audioUrl) {\n                const audio = new Audio(audioUrl);\n                audio.play();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"definition-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"definition\",\n            children: wordData[0].meanings[0].partOfSpeech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"meaning\",\n          children: \"Meaning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"meanings\",\n          children: wordData[0].meanings[0].definitions.map((definition, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: definition.definition\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), wordData[0].meanings[0].definitions[0].synonyms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"synonymos-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"synonymos\",\n            children: \"Synonyms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"synonymos-example\",\n            children: wordData[0].meanings[0].definitions[0].synonyms[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"definition-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"definition\",\n            children: wordData[0].meanings.find(meaning => meaning.partOfSpeech === \"verb\").partOfSpeech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"meaning\",\n          children: \"Meaning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"meanings\",\n          children: [wordData[0].meanings.find(meaning => meaning.partOfSpeech === \"verb\").definitions.map((definition, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: definition.definition\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n            id: \"example\",\n            children: wordData[0].meanings.find(meaning => meaning.partOfSpeech === \"verb\").definitions[0].example\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), wordData[0].meanings.find(meaning => meaning.partOfSpeech === \"verb\").definitions[0].synonyms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"synonymos-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"synonymos\",\n            children: \"Synonyms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"synonymos-example\",\n            children: wordData[0].meanings.find(meaning => meaning.partOfSpeech === \"verb\").definitions[0].synonyms[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        id: \"bottom-hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"link-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"source\",\n          href: \"/\",\n          children: \"Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"source-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"link\",\n            href: \"/\",\n            children: \"https://en.wiktionary.org/wiki/keyboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: NewWindow,\n            alt: \"New Window\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"hR7nrR4gkhUcl8w+2rTP+vlUgAU=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["SearchIcon","PlayIcon","NewWindow","useState","jsxDEV","_jsxDEV","Main","_ref","_s","darkMode","selectedFont","wordData","setWordData","error","setError","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","searchWord","target","elements","search","value","fetch","then","res","ok","Error","json","data","catch","id","className","children","style","fontFamily","onSubmit","type","placeholder","name","backgroundImage","backgroundRepeat","backgroundPosition","fileName","_jsxFileName","lineNumber","columnNumber","word","phonetic","src","alt","onClick","audioUrl","phonetics","audio","Audio","play","meanings","partOfSpeech","definitions","map","definition","index","synonyms","length","find","meaning","example","href","_c","$RefreshReg$"],"sources":["/Users/julieserafini/Desktop/dictionary-app/src/components/Main/Main.js"],"sourcesContent":["import SearchIcon from \"../../assets/images/icon-search.svg\";\nimport \"./Main.css\";\nimport PlayIcon from \"../../assets/images/icon-play.svg\";\nimport NewWindow from \"../../assets/images/icon-new-window.svg\";\n\n/*const Main = ({ darkMode }) => {\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <form>\n        <input\n          type=\"text\"\n          id=\"search-input\"\n          style={{\n            backgroundImage: `url(${SearchIcon})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \" 95% 50%\",\n          }}\n        />\n      </form>\n      <div id=\"word-audio-div\">\n        <div>\n          <h1 id=\"word\">Keyboard</h1>\n          <p id=\"phonetic\">/'ki:bc:d/</p>\n        </div>\n        <img id=\"play-icon\" src={PlayIcon} alt=\"Play Icon\" />\n      </div>\n      <div id=\"definition-div\">\n        <p id=\"definition\">noun</p>\n        <hr/>\n      </div>\n      <p id=\"meaning\">Meaning</p>\n      <ul id=\"meanings\">\n          <li>(etc.) A set of keys used to operate a typewriter, computer etc.</li>\n          <li>A component of many instruments including the piano, organ, and harpsichord consisting of usually black and white keys that cause different tones to be produced when struck.</li>\n          <li>A device with keys of a musical keyboard, used to control electronic sound-producing devices which may be built into or separate from the keyboard device.</li>\n      </ul>\n      <div id=\"synonymos-div\">\n      <h3 id=\"synonymos\">Synonyms</h3>\n      <p id=\"synonymos-example\">electronic keyboard</p>\n      </div>\n      <div id=\"definition-div\">\n        <p id=\"definition\">verb</p>\n        <hr />\n      </div>\n      <p id=\"meaning\">Meaning</p>\n      <ul id=\"meanings\">\n          <li>To type on a computer keyboard.</li>\n          <li id=\"example\">“Keyboarding is the part of this job I hate the most.”</li>\n      </ul>\n      <hr id=\"bottom-hr\"/>\n      <div id=\"link-div\">\n      <a id=\"source\" href=\"/\">Source</a>\n      <div id=\"source-div\">\n      <a id=\"link\" href=\"/\">https://en.wiktionary.org/wiki/keyboard</a>\n      <img src={NewWindow} alt=\"New Window\"/>\n      </div>\n      </div>\n      \n\n\n\n    </div>\n  );\n};\n\nexport default Main;\n\nconst Main = ({ darkMode, selectedFont }) => {\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        <div\n          id=\"word-audio-div\"\n          style={{ fontFamily: selectedFont }} // add fontFamily\n        >\n          <div>\n        <h1 id=\"word\">Keyboard</h1>\n            <p id=\"phonetic\">/ˈkiːbɔːd/</p>\n          </div>\n          <img id=\"play-icon\" src={PlayIcon} alt=\"Play Icon\" />\n        </div>\n        <div id=\"definition-div\">\n          <p id=\"definition\">noun</p>\n          <hr />\n        </div>\n        <p id=\"meaning\">Meaning</p>\n        <ul id=\"meanings\">\n          <li>\n            (etc.) A set of keys used to operate a typewriter, computer etc.\n          </li>\n          <li>\n            A component of many instruments including the piano, organ, and\n            harpsichord consisting of usually black and white keys that cause\n            different tones to be produced when struck.\n          </li>\n          <li>\n            A device with keys of a musical keyboard, used to control electronic\n            sound-producing devices which may be built into or separate from the\n            keyboard device.\n          </li>\n        </ul>\n        <div id=\"synonymos-div\">\n          <h3 id=\"synonymos\">Synonyms</h3>\n          <p id=\"synonymos-example\">electronic keyboard</p>\n        </div>\n        <div id=\"definition-div\">\n          <p id=\"definition\">verb</p>\n          <hr />\n        </div>\n        <p id=\"meaning\">Meaning</p>\n        <ul id=\"meanings\">\n          <li>To type on a computer keyboard.</li>\n          <li id=\"example\">\n            “Keyboarding is the part of this job I hate the most.”\n          </li>\n        </ul>\n        <hr id=\"bottom-hr\" />\n        <div id=\"link-div\">\n          <a id=\"source\" href=\"/\">\n            Source\n          </a>\n          <div id=\"source-div\">\n            <a id=\"link\" href=\"/\">\n              https://en.wiktionary.org/wiki/keyboard\n            </a>\n            <img src={NewWindow} alt=\"New Window\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No result\");\n      });\n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            name=\"search\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetics[0].text}</p>\n              </div>\n              <img\n                id=\"play-icon\"\n                src={PlayIcon}\n                alt=\"Play Icon\"\n                onClick={() => {\n                  const audioUrl = wordData[0].phonetics[0].audio;\n                  if (audioUrl) {\n                    const audio = new Audio(audioUrl);\n                    audio.play();\n                  }\n                }}\n              />\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            <div id=\"synonymos-div\">\n              <h3 id=\"synonymos\">Synonyms</h3>\n              <p id=\"synonymos-example\">\n                {wordData[0].meanings[0].definitions[0].synonyms[0]}\n              </p>\n            </div>\n          </div>\n        )}\n        <div id=\"definition-div\">\n          <p id=\"definition\">verb</p>\n          <hr />\n        </div>\n        <p id=\"meaning\">Meaning</p>\n        <ul id=\"meanings\">\n          <li>To type on a computer keyboard.</li>\n          <li id=\"example\">\n            “Keyboarding is the part of this job I hate the most.”\n          </li>\n        </ul>\n        {error && <p>{errorMessage}</p>}\n        <hr id=\"bottom-hr\" />\n        <div id=\"link-div\">\n          <a id=\"source\" href=\"/\">\n            Source\n          </a>\n          <div id=\"source-div\">\n            <a id=\"link\" href=\"/\">\n              https://en.wiktionary.org/wiki/keyboard\n            </a>\n            <img src={NewWindow} alt=\"New Window\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;*/\n\nimport { useState } from \"react\";\n\nconst Main = ({ darkMode, selectedFont }) => {\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchWord = e.target.elements.search.value;\n\n    fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`)\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        setError(false);\n        setErrorMessage(\"\");\n        return res.json();\n      })\n      .then((data) => {\n        setWordData(data);\n      })\n      .catch(() => {\n        setError(true);\n        setErrorMessage(\"No Definitions Found\");\n      });\n  };\n\n  return (\n    <div id=\"main-container\" className={`${darkMode ? \"dark-mode\" : \"\"}`}>\n      <div style={{ fontFamily: selectedFont }}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"search-input\"\n            placeholder=\"Search for any word...\"\n            name=\"search\"\n            style={{\n              backgroundImage: `url(${SearchIcon})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPosition: \" 95% 50%\",\n              fontFamily: selectedFont, // add fontFamily style\n            }}\n          />\n        </form>\n        {error && (\n            <div id=\"error-message-hidden\">\n                <div>😕</div>\n            <p>{errorMessage}</p>\n            <div>\n              Sorry pal, we couldn't find definitions for the word you were\n              looking for. You can try the search again at later time or head to\n              the web instead.\n            </div>\n            </div>\n        )}\n            {wordData && (\n          <div>\n            <div id=\"word-audio-div\">\n              <div>\n                <h1 id=\"word\">{wordData[0].word}</h1>\n                <p id=\"phonetic\">{wordData[0].phonetic}</p>\n              </div>\n              <img\n                id=\"play-icon\"\n                src={PlayIcon}\n                alt=\"Play Icon\"\n                onClick={() => {\n                  const audioUrl = wordData[0].phonetics[0].audio;\n                  if (audioUrl) {\n                    const audio = new Audio(audioUrl);\n                    audio.play();\n                  }\n                }}\n              />\n            </div>\n            <div id=\"definition-div\">\n              <p id=\"definition\">{wordData[0].meanings[0].partOfSpeech}</p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings[0].definitions.map((definition, index) => (\n                <li key={index}>{definition.definition}</li>\n              ))}\n            </ul>\n            {wordData[0].meanings[0].definitions[0].synonyms.length > 0 && (\n              <div id=\"synonymos-div\">\n                <h3 id=\"synonymos\">Synonyms</h3>\n                <p id=\"synonymos-example\">\n                  {wordData[0].meanings[0].definitions[0].synonyms[0]}\n                </p>\n              </div>\n            )}\n            <div id=\"definition-div\">\n              <p id=\"definition\">\n                {\n                  wordData[0].meanings.find(\n                    (meaning) => meaning.partOfSpeech === \"verb\"\n                  ).partOfSpeech\n                }\n              </p>\n              <hr />\n            </div>\n            <p id=\"meaning\">Meaning</p>\n            <ul id=\"meanings\">\n              {wordData[0].meanings\n                .find((meaning) => meaning.partOfSpeech === \"verb\")\n                .definitions.map((definition, index) => (\n                  <li key={index}>{definition.definition}</li>\n                ))}\n              <li id=\"example\">\n                {\n                  wordData[0].meanings.find(\n                    (meaning) => meaning.partOfSpeech === \"verb\"\n                  ).definitions[0].example\n                }\n              </li>\n            </ul>\n            {wordData[0].meanings.find(\n              (meaning) => meaning.partOfSpeech === \"verb\"\n            ).definitions[0].synonyms.length > 0 && (\n              <div id=\"synonymos-div\">\n                <h3 id=\"synonymos\">Synonyms</h3>\n                <p id=\"synonymos-example\">\n                  {\n                    wordData[0].meanings.find(\n                      (meaning) => meaning.partOfSpeech === \"verb\"\n                    ).definitions[0].synonyms[0]\n                  }\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n        <hr id=\"bottom-hr\" />\n        <div id=\"link-div\">\n          <a id=\"source\" href=\"/\">\n            Source\n          </a>\n          <div id=\"source-div\">\n            <a id=\"link\" href=\"/\">\n              https://en.wiktionary.org/wiki/keyboard\n            </a>\n            <img src={NewWindow} alt=\"New Window\" />\n          </div>\n        </div>\n        \n      </div>\n      \n      \n    </div>\n\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}